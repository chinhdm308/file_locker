[versions]
# Build
compileSDKVersion = "34"
targetSDK = "34"
minimumSDK = "24"
javaVersion = "VERSION_17"
kotlinJVMTarget = "17"
# Jetbrains
kotlin = "1.9.10"
# KSP
ksp = "1.9.10-1.0.13"
appUpdateKtx = "2.1.0"
androidAnimationLibrary = "2.4@aar"
mpandroidchart = "v3.1.0"
reviewKtx = "2.0.1"
switchButton = "0.0.3@aar"
constraintlayout = "2.1.4"
lifecycle = "2.8.5"
lifecycleExtensions = "2.2.0"
lifecycleCompiler = "2.6.2"
preference = "1.2.1"
work = "2.9.1"
appcompat = "1.7.0"
activityKtx = "1.8.0"
fragmentKtx = "1.6.1"
pagingRuntimeKtx = "3.3.2"
pagingCommonKtx = "3.3.2"
startupRuntime = "1.1.1"
datastorePreferences = "1.1.1"
room = "2.6.1"
exifinterface = "1.3.7"
multidex = "2.0.1"
navigation = "2.8.0"
coreKtx = "1.13.1"
coroutines = "1.7.3"
androidGradlePlugin = "8.1.4"
# Google
googleServices = "4.4.2"
googlePlayServicesAds = "23.3.0"
googlePlayServicesAdsIdentifier = "18.1.0"
googlePlayServicesMaps = "19.0.0"
userMessagingPlatform = "3.0.0"
material = "1.12.0"
billing = "7.0.0"
androidMapsUtils = "2.3.0"
# Dagger-Hilt Android
hilt = "2.48.1"
hiltCompiler = "1.2.0"
# Firebase
firebaseBom = "33.2.0"
firebaseCrashlyticsGradlePlugin = "3.0.2"
firebasePrefGradlePlugin = "1.4.2"
firebaseAppdistributionGradlePlugin = "5.0.0"
# Testing
junit = "4.13.2"
testJunit = "1.1.5"
testEspressoCore = "3.5.1"
# Network
retrofit = "2.9.0"
okhttpBom = "4.11.0"
moshiKotlin = "1.14.0"
# Others
stetho = "1.6.0"
numberpicker = "2.4.13"
autofittextview = "0.2.1"
wifiutils = "1.6.6"
lottie = "6.4.1"
jsoup = "1.14.3"
glide = "4.16.0"
multiScreenDesign = "1.1.1"
timber = "5.0.1"
circleprogressbar = "1.3.0"
shimmer = "0.5.0"
testng = "6.9.6"

[libraries]
appUpdateKtx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdateKtx" }
billingKtx = { module = "com.android.billingclient:billing-ktx", version.ref = "billing" }
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
activityKtx = { module = "androidx.activity:activity-ktx", version.ref = "activityKtx" }
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidAnimationLibrary = { module = "com.daimajia.androidanimations:library", version.ref = "androidAnimationLibrary" }
mpandroidchart = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "mpandroidchart" }
preferenceKtx = { module = "androidx.preference:preference-ktx", version.ref = "preference" }
pagingRuntimeKtx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "pagingRuntimeKtx" }
pagingCommonKtx = { module = "androidx.paging:paging-common-ktx", version.ref = "pagingCommonKtx" }
exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "exifinterface" }
reviewKtx = { module = "com.google.android.play:review-ktx", version.ref = "reviewKtx" }
switchButton = { module = "com.github.zcweng:switch-button", version.ref = "switchButton" }
workKtx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }
startupRuntime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }
multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
# Navigation
navigationFragmentKtx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigationUiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
# Lifecycle
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
lifecycleExtensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
lifecycleCompiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycleCompiler" }
# Datastore
datastorePreferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
datastorePreferencesCore = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastorePreferences" }
# Room
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "room" }
# Coroutines
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutinesPlayServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
# Testing
junit = { module = "junit:junit", version.ref = "junit" }
testJunit = { module = "androidx.test.ext:junit", version.ref = "testJunit" }
testEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "testEspressoCore" }
# Material Design
material = { module = "com.google.android.material:material", version.ref = "material" }
# Google Play Service
googlePlayServicesAds = { module = "com.google.android.gms:play-services-ads", version.ref = "googlePlayServicesAds" }
googlePlayServicesAdsIdentifier = { module = "com.google.android.gms:play-services-ads-identifier", version.ref = "googlePlayServicesAdsIdentifier" }
googlePlayServicesAdsLite = { module = "com.google.android.gms:play-services-ads-lite", version.ref = "googlePlayServicesAds" }
googlePlayServicesMaps = { module = "com.google.android.gms:play-services-maps", version.ref = "googlePlayServicesMaps" }
userMessagingPlatform = { module = "com.google.android.ump:user-messaging-platform", version.ref = "userMessagingPlatform" }
androidMapsUtils = { module = "com.google.maps.android:android-maps-utils", version.ref = "androidMapsUtils" }
# Firebase
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebaseAnalytics = { module = "com.google.firebase:firebase-analytics" }
firebaseDatabase = { module = "com.google.firebase:firebase-database" }
firebasePerf = { module = "com.google.firebase:firebase-perf" }
firebaseConfig = { module = "com.google.firebase:firebase-config" }
# Dagger-Hilt
dagger = { module = "com.google.dagger:dagger", version.ref = "hilt" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "hilt" }
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltAndroidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCompiler" }

# Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converterMoshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
okhttpBom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttpBom" }
okhttp = { module = "com.squareup.okhttp3:okhttp" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiKotlin" }
moshiKotlinCodegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiKotlin" }
# Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideKsp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
# Multi-Screen
sdpAndroid = { module = "com.intuit.sdp:sdp-android", version.ref = "multiScreenDesign" }
sspAndroid = { module = "com.intuit.ssp:ssp-android", version.ref = "multiScreenDesign" }
# Others
autofittextview = { module = "me.grantland:autofittextview", version.ref = "autofittextview" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
wifiutils = { module = "io.github.thanosfisherman.wifiutils:wifiutils", version.ref = "wifiutils" }
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
circleprogressbar = { module = "com.dinuscxj:circleprogressbar", version.ref = "circleprogressbar" }
numberpicker = { module = "io.github.ShawnLin013:number-picker", version.ref = "numberpicker" }
stetho = { module = "com.facebook.stetho:stetho", version.ref = "stetho" }
shimmer = { module = "com.facebook.shimmer:shimmer", version.ref = "shimmer" }
testng = { group = "org.testng", name = "testng", version.ref = "testng" }

[bundles]
room = [
    "roomKtx",
    "roomRuntime",
]
lifecycle = [
    "lifecycleRuntime",
    "lifecycleViewModel",
    "lifecycleProcess",
]
firebase = [
    "firebaseCrashlytics",
    "firebaseAnalytics",
    "firebaseDatabase",
    "firebasePerf",
]
navigation = [
    "navigationFragmentKtx",
    "navigationUiKtx",
]
multiScreenDesign = [
    "sdpAndroid",
    "sspAndroid",
]
okhttp = [
    "okhttp",
    "loggingInterceptor",
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidGradlePlugin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
hiltAndroid = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
firebaseCrashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsGradlePlugin" }
firebasePerf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePrefGradlePlugin" }
firebaseAppdistribution = { id = "com.google.firebase.appdistribution", version.ref = "firebaseAppdistributionGradlePlugin" }
